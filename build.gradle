plugins {
    id 'java'
}

defaultTasks 'build'

rootProject.group = 'com.badbones69.crazycrates'
rootProject.description = 'Add unlimited crates to your server with 10 different crate types to choose from!'
rootProject.version = '2.0.0-rc1'

def combine = tasks.register("combine", Jar) {
    mustRunAfter build
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from(files(subprojects.collect {
        it.layout.buildDirectory.file("libs/${rootProject.name}-${it.name}-${it.version}.jar").get()
    }).filter { it.name != 'MANIFEST.MF' }.collect { if (it.isDirectory()) it else zipTree(it) })
}

assemble {
    // this is to ensure the subprojects finish building completely before this task is finished
    subprojects.forEach { project ->
                dependsOn ":${project.name}:build"
            }
    // after subprojects are finished we can combine their jars into a fatjar
    finalizedBy combine
}

allprojects {
    apply plugin: 'java'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    //project(":fabric") {
    //    repositories {
    //        maven { url = 'https://maven.fabricmc.net/' }
    //        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    //    }
    //}

    project(":paper") {
        apply plugin: 'java'

        repositories {
            maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
            maven { url = "https://repo.papermc.io/repository/maven-public/" }
            maven { url = "https://repo.codemc.io/repository/maven-public/" }
            maven { url = "https://repo.triumphteam.dev/snapshots/" }
        }

        dependencies {
            compileOnly("ch.jalu:configme:$configVersion")

            compileOnly("com.github.Carleslc.Simple-YAML:Simple-Yaml:$yamlVersion") {
                exclude group: 'org.yaml', module: 'snakeyaml'
            }
        }
    }

    project(":core") {
        apply plugin: 'java'

        repositories {
            mavenLocal()
        }

        dependencies {
            // Provided by Mojang/Paper/Fabric
            compileOnly("net.kyori:adventure-api:$advVersion")
            compileOnly("net.kyori:adventure-text-minimessage:$advVersion")
            compileOnly("com.google.code.gson:gson:$gsonVersion")

            implementation("ch.jalu:configme:$configVersion")

            implementation("com.github.Carleslc.Simple-YAML:Simple-Yaml:$yamlVersion") {
                exclude group: 'org.yaml', module: 'snakeyaml'
            }
        }
    }

    repositories {
        mavenCentral()

        maven { url = 'https://jitpack.io' }
    }

    dependencies {
        implementation("cloud.commandframework:cloud-paper:$cloudVersion")

        implementation("cloud.commandframework:cloud-core:$cloudVersion")
        implementation("cloud.commandframework:cloud-brigadier:$cloudVersion")
        implementation("cloud.commandframework:cloud-minecraft-extras:$cloudVersion")

        implementation("net.kyori:adventure-platform-bukkit:$advBukkitVersion")
    }

    jar {
        if (rootProject.name == project.name) {
            archiveBaseName = rootProject.name
        } else {
            archiveBaseName = "${rootProject.name}-${project.name}"
        }
    }

    compileJava {
        options.encoding = 'UTF-8'
        options.release.set(17)
    }

    processResources {
        filteringCharset = 'UTF-8'
    }
}